 int findDuplicate(vector<int>& nums) {
        int n = nums.size();
        
        for(int i = 0;i<n;i++)  {
            nums[nums[i] % n ] += n;
        }
        for(int i = 0;i<n;i++)  {
            if(nums[i] >= 2 * n)    {
                return i;
            }
        }
        assert(false);
    }
    
// Floyd Method

int findDuplicate(vector<int>& nums) {
        int slow = nums[0];
        int fast = nums[nums[0]];
        
        while(slow != fast) {
            slow = nums[slow];
            fast = nums[nums[fast]];
        }
        
        fast = 0;
        
        while(slow != fast) {
            slow = nums[slow];
            fast = nums[fast];
        }
        
        return slow;
    }
